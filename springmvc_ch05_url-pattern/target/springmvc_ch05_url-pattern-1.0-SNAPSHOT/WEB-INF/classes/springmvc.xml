<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启组件扫描-->
    <context:component-scan base-package="com.bjpowernode.controller"></context:component-scan>

    <!--声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/views/"/>
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
        第二种处理静态资源的方式
        mvc:resources加入后端框架会创建ResourceHttpRequestHandler这个处理器
        让这个对象处理静态资源，不依赖tomcat服务器
        mapping：访问静态资源的uri地址，使用通配符 **
        localhost：静态资源在你的项目中的目录的位置

        /images/**(可以表示文件也可以表示目录) ： 表示 images/p1.jpg(单一文件)，images/user/logo.gif(两级目录)，images/order/history/list.png(多级目录)
    -->
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/html/**" location="/html/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>



    <!--注解驱动-->
    <!--<mvc:resources>和@RequestMapping有一定的冲突-->
    <!--只要使用了静态资源的访问配置，注解驱动都必须要有，不能省略-->
    <mvc:annotation-driven/>

    <mvc:resources mapping="/static/**" location="/static/"/>
</beans>